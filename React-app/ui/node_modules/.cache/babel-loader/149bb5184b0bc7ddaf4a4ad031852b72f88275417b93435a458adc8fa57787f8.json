{"ast":null,"code":"var _jsxFileName = \"E:\\\\WEB_DEV\\\\React-app\\\\React-Project\\\\ui\\\\src\\\\components\\\\ThemeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../styles/ThemeToggle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = ({\n  darkMode,\n  setDarkMode\n}) => {\n  _s();\n  const location = useLocation();\n\n  // Determine if we're on a dashboard page\n  const isDashboardPage = location.pathname.includes('-home');\n\n  // Apply dark mode to the body when the component mounts or darkMode changes\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n  }, [darkMode]);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `global-theme-toggle ${isDashboardPage ? 'dashboard-toggle' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: darkMode,\n        onChange: toggleTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider round\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sun-icon\",\n            children: \"\\u2600\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"moon-icon\",\n            children: \"\\uD83C\\uDF19\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","useLocation","jsxDEV","_jsxDEV","ThemeToggle","darkMode","setDarkMode","_s","location","isDashboardPage","pathname","includes","document","body","classList","toggle","toggleTheme","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/WEB_DEV/React-app/React-Project/ui/src/components/ThemeToggle.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport '../styles/ThemeToggle.css';\r\n\r\nconst ThemeToggle = ({ darkMode, setDarkMode }) => {\r\n  const location = useLocation();\r\n  \r\n  // Determine if we're on a dashboard page\r\n  const isDashboardPage = location.pathname.includes('-home');\r\n\r\n  // Apply dark mode to the body when the component mounts or darkMode changes\r\n  useEffect(() => {\r\n    document.body.classList.toggle('dark-mode', darkMode);\r\n  }, [darkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <div className={`global-theme-toggle ${isDashboardPage ? 'dashboard-toggle' : ''}`}>\r\n      <label className=\"switch\">\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={darkMode}\r\n          onChange={toggleTheme}\r\n        />\r\n        <span className=\"slider round\">\r\n          <div className=\"slider-icons\">\r\n            <span className=\"sun-icon\">‚òÄÔ∏è</span>\r\n            <span className=\"moon-icon\">üåô</span>\r\n          </div>\r\n        </span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,eAAe,GAAGD,QAAQ,CAACE,QAAQ,CAACC,QAAQ,CAAC,OAAO,CAAC;;EAE3D;EACAX,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEV,QAAQ,CAAC;EACvD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBV,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,oBACEF,OAAA;IAAKc,SAAS,EAAE,uBAAuBR,eAAe,GAAG,kBAAkB,GAAG,EAAE,EAAG;IAAAS,QAAA,eACjFf,OAAA;MAAOc,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACvBf,OAAA;QACEgB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEf,QAAS;QAClBgB,QAAQ,EAAEL;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACFtB,OAAA;QAAMc,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC5Bf,OAAA;UAAKc,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3Bf,OAAA;YAAMc,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpCtB,OAAA;YAAMc,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCIH,WAAW;EAAA,QACEH,WAAW;AAAA;AAAAyB,EAAA,GADxBtB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}